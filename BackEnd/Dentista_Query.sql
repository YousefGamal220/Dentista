CREATE TABLE DENTIST
(
  DENTIST_ID INT NOT NULL,
  DENTIST_Fname VARCHAR(50) NOT NULL,
  DENTIST_LNAME VARCHAR(50) NOT NULL,
  DENTIST_EMAIL VARCHAR(255) NOT NULL,
  DENTIST_PASSWORD VARCHAR(15) NOT NULL,
  DENTIST_PHONE_NUMBER VARCHAR(15) NOT NULL,
  DENTIST_ADDRESS VARCHAR(255) NOT NULL,
  DENTIST_ZIP_CODE INT NOT NULL,
  DENTIST_REGION VARCHAR(50) NOT NULL,
  DENTIST_CITY VARCHAR(50) NOT NULL,
  DENTIST_CREDIT_CARD_NUMBER VARCHAR(20) NOT NULL,
  DENTIST_IMAGE_URL VARCHAR(255),
  PRIMARY KEY (DENTIST_ID),
  UNIQUE (DENTIST_EMAIL),
  UNIQUE (DENTIST_PHONE_NUMBER)
);

CREATE TABLE ORDERS
(
  ORDER_ID INT NOT NULL,
  DENTIST_ID INT NOT NULL,
  DELIVERY_ID INT NOT NULL,
  TOTAL_COST INT NOT NULL,
  PRIMARY KEY (ORDER_ID)
);

CREATE TABLE MANAGER
(
  MANAGER_ID INT NOT NULL,
  MANAGER_Fname VARCHAR(50) NOT NULL,
  MANAGER_Lname VARCHAR(50) NOT NULL,
  MANAGER_EMAIL VARCHAR(255) NOT NULL,
  MANAGER_PASSWORD VARCHAR(15) NOT NULL,
  MANAGEMENT_TYPE VARCHAR(15) NOT NULL,
  AREA_OF_MANAGEMENT VARCHAR(255) NOT NULL,
  PRIMARY KEY (MANAGER_ID),
  UNIQUE (MANAGER_EMAIL)
);

CREATE TABLE PRODUCT
(
  PRODUCT_ID INT NOT NULL,
  PRODUCT_NAME VARCHAR(255) NOT NULL,
  CATEGORY VARCHAR(255) NOT NULL,
  BRAND VARCHAR(255) NOT NULL,
  DESCRIPTION VARCHAR(500) NOT NULL,
  PRICE INT NOT NULL,
  SELLING_PRICE INT NOT NULL,
  IMAGE_URL VARCHAR(255) NOT NULL,
  PRIMARY KEY (PRODUCT_ID),
  UNIQUE (CATEGORY),
  UNIQUE (BRAND),
  UNIQUE (DESCRIPTION),
  UNIQUE (IMAGE_URL)
);

CREATE TABLE VIRTUAL_BANK
(
  CARD_NUMBER VARCHAR(20) NOT NULL,
  FIRST_NAME VARCHAR(50) NOT NULL,
  LAST_NAME VARCHAR(50) NOT NULL,
  EMAIL VARCHAR(255) NOT NULL,
  PASSWORD VARCHAR(15) NOT NULL,
  NATIONAL_ID VARCHAR(14) NOT NULL,
  SECURITY_CODE INT NOT NULL,
  EXPIRATION_MONTH INT NOT NULL,
  EXPIRATION_YEAR INT NOT NULL,
  CREDIT FLOAT NOT NULL,
  PRIMARY KEY (CARD_NUMBER),
  UNIQUE (EMAIL)
);

CREATE TABLE STORE
(
  STORE_ID INT NOT NULL,
  STORE_NAME VARCHAR(100) NOT NULL,
  EMAIL VARCHAR(255) NOT NULL,
  PASSWORD VARCHAR(15) NOT NULL,
  PHONE_NUMBER VARCHAR(15) NOT NULL,
  CREDIT_CARD_NUMBER VARCHAR(20) NOT NULL,
  MANAGER_ID INT NOT NULL,
  PRIMARY KEY (STORE_ID),
  FOREIGN KEY (MANAGER_ID) REFERENCES MANAGER(MANAGER_ID),
  UNIQUE (EMAIL),
  UNIQUE (PHONE_NUMBER)
);

CREATE TABLE STORE_BRANCH
(
  STORE_ID INT NOT NULL,
  ADDRESS VARCHAR(255) NOT NULL,
  REGION VARCHAR(50) NOT NULL,
  CITY VARCHAR(50) NOT NULL,
  ZIP_CODE INT NOT NULL,
  FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID),
  UNIQUE (ADDRESS)
);

CREATE TABLE DELIVERY
(
  DELIVERY_ID INT NOT NULL,
  DELIVERY_Fname VARCHAR(50) NOT NULL,
  DELIVERY_Lname VARCHAR(50) NOT NULL,
  DELIVERY_EMAIL VARCHAR(255) NOT NULL,
  DELIVERY_PASSWORD VARCHAR(15) NOT NULL,
  DELIVERY_CREDIT_CARD_NUMBER VARCHAR(20) NOT NULL,
  AREA VARCHAR(50) NOT NULL,
  VECHILE_LICENCE VARCHAR(50) NOT NULL,
  VECHILE_MODEL VARCHAR(50) NOT NULL,
  RATE INT,
  AVAILABLE INT NOT NULL,
  MANAGER_ID INT NOT NULL,
  PRIMARY KEY (DELIVERY_ID),
  FOREIGN KEY (MANAGER_ID) REFERENCES MANAGER(MANAGER_ID),
  UNIQUE (DELIVERY_EMAIL),
  UNIQUE (VECHILE_LICENCE)
);

CREATE TABLE ORDER_PRODUCT
(
  NUMBER_OF_UNITS INT NOT NULL,
  ORDER_ID INT NOT NULL,
  STORE_ID INT NOT NULL,
  PRODUCT_ID INT NOT NULL,
  FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
  FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID),
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
);

CREATE TABLE DENTIST_STORE_CHAT
(
  MESSAGES VARCHAR(255) NOT NULL,
  DENTIST_ID INT NOT NULL,
  STORE_ID INT NOT NULL,
  FOREIGN KEY (DENTIST_ID) REFERENCES DENTIST(DENTIST_ID),
  FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID)
);

CREATE TABLE STORE_PRODUCT
(
  PRODUCT_RATE INT NOT NULL,
  NUMBER_OF_UNITS INT NOT NULL,
  STORE_ID INT NOT NULL,
  PRODUCT_ID INT NOT NULL,
  FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID),
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
);

CREATE TABLE DENTIST_DELIVERY_CHAT
(
  MESSAGES VARCHAR(255) NOT NULL,
  DENTIST_ID INT NOT NULL,
  DELIVERY_ID INT NOT NULL,
  FOREIGN KEY (DENTIST_ID) REFERENCES DENTIST(DENTIST_ID),
  FOREIGN KEY (DELIVERY_ID) REFERENCES DELIVERY(DELIVERY_ID)
);

CREATE TABLE STORE_DELIVERY_CHAT
(
  MESSAGES VARCHAR(255) NOT NULL,
  STORE_ID INT NOT NULL,
  DELIVERY_ID INT NOT NULL,
  FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID),
  FOREIGN KEY (DELIVERY_ID) REFERENCES DELIVERY(DELIVERY_ID)
);